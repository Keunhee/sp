CC = gcc
CFLAGS = -Wall -Wextra -g
LDFLAGS = -ljansson -lpthread

# 기본 타겟
all: server client test_octaflip

# 서버 빌드
server: server.o octaflip.o json_handler.o
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

# 클라이언트 빌드
client: client.o octaflip.o json_handler.o led_matrix.o
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

# 테스트 프로그램 빌드
test_octaflip: test_octaflip.o octaflip.o led_matrix.o
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

# 객체 파일 빌드 규칙
server.o: server.c octaflip.h json_handler.h
	$(CC) $(CFLAGS) -c $<

client.o: client.c octaflip.h json_handler.h led_matrix.h
	$(CC) $(CFLAGS) -c $<

test_octaflip.o: test_octaflip.c octaflip.h led_matrix.h
	$(CC) $(CFLAGS) -c $<

octaflip.o: octaflip.c octaflip.h
	$(CC) $(CFLAGS) -c $<

led_matrix.o: led_matrix.c led_matrix.h octaflip.h
	$(CC) $(CFLAGS) -c $<

json_handler.o: json_handler.c json_handler.h octaflip.h
	$(CC) $(CFLAGS) -c $<

# 하드웨어 LED 드라이버 포함 (선택적)
led_driver.o: led_driver.c led_matrix.h
	$(CC) $(CFLAGS) -c $<

client_with_hardware: client.o octaflip.o json_handler.o led_matrix.o led_driver.o
	$(CC) $(CFLAGS) -o client $^ $(LDFLAGS)

# 클린 타겟
clean:
	rm -f *.o server client test_octaflip

# 실행 테스트
run_server:
	./server

run_client:
	./client -ip 127.0.0.1 -port 8888 -username Player1

run_test:
	./test_octaflip

# 종속성
server.o: octaflip.h json_handler.h
client.o: octaflip.h json_handler.h led_matrix.h
octaflip.o: octaflip.h
led_matrix.o: led_matrix.h octaflip.h
json_handler.o: json_handler.h octaflip.h
test_octaflip.o: octaflip.h led_matrix.h

.PHONY: all clean run_server run_client run_test